%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.1 (Build 17B48) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 715 514
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 715 514
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: QURJOW+FiraCode-Regular
%!FontType1-1.0: QURJOW+FiraCode-Regular 1.0000.1.2040
14 dict begin/FontName /QURJOW+FiraCode-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /w put
dup 34 /space put
dup 35 /b put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1777 1 index div -500 2 index div 1192 3 index div 1050 5 -1 roll div]cvx def
/sfnts [<





11132416123528181E030F07062B0118010E0724030D06080B04260811021A280202090E010A0F0329030512040C0402042F110403100302203E2E3E2D1E0F0E242F11090C0203131A0C0D13151D140925070C06122205073B3504030310220703060F0C0D0213252D30112C070A1606041D26173729061C020709150A0B160812280E34073C333C08403D023A0824420D0C04131107395E25085A03051545281C1604081713030E190110010E061A331204182F120C1603160F08070202040C1F1503051305262F34020A2810040C1804030F0A0F3611030C1D14171A0201130A01192410051003263114031C3106011D040D24030110030A08050E121D2703040E1711020402070A122F23232D3720061E0C0715063C03153E6F0D090C01031A0F101D1303142411070A08060C060A1611091D36013505241A1B0B0402151A1617081B16030D051722081D151601131004080F343F1403570401071A0721150C0E0C1A19041504044F16040311040108022204010B161004010604310302070501036D130C0403070C02190A060E0502022F051112011403D1160408070D0418041704062F030E070602040425021504050E150A07130402031A0C021304010304032117050204260000000001000000013439E7EAD3395F0F3CF5000303E800000000D443D99600000000D443E5F2F90FFE0C04A8041A0000000700020000000000000001000003A7FEF700000291F90FFB5804A80001000000000000000000000000000000050258005A0258000002580064025800120258FEED00000052005200BC00F0039400010000000501E0005B0070000A0002006A007B008B000000CC0D1600030001004BB800C85258B101018E59B001B9080008006370B1000742B6735F4B372305002AB1000742400C660852083E082A08180705082AB1000742400C70065C0648063406210505082AB1000C42BE19C014C00FC00AC00640000500092AB1001142BE00400040004000400040000500092AB1030044B12401885158B0408858B1036444B12601885158BA08800001044088635458B103004459595959400C6808540840082C081A07050C2AB801FF85B0048DB1020044B3056406004444
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/space 1 def
/b 2 def
/w 3 def
/uniE003 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1777 -500 1192 1050}def
/UniqueID 4185145 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893F29BB4D157E7F1A37F7A4689D39EB5610811CB23FF33D5981260BF85AC6AE8BD513D19FA19AEAE4DA86F85C906A325706844C2DFABCCAC2BE8A10987232EC11D7C3867144BD9D0073CCF4A45B55FF5A39519C15970DD0EF2A814B1AE316161B6E659006496F7A7FB394EA90DF753301C82031E9AA7AD3BA8F6C1946E127F02FA675C52CF857C5EB98703E6000CA48038079527BE1F17694BF5B771316E6BEEFA7F3FEEE7608F34DDF73D02F1C7C4B18F16A816FB2513F3738D879969C6476EF596208B552E1CFAA5C673802427F3034832A7B856ADAC7A52127B2AA23422DB8DB394BA835F2FD787E5B073409C12822AA59B1FB75881EEE58FB3C6306B99056CF11B85BFA2048F732AC87E8C415022CEE2DACC8F047F7E5F1F6EC1555D70F821F8807C18CDF40EF1627AC5AFF976E691104076CCCDAAAE222A51ACD756A4D1227D2139BD66750DFB8EB12B2A7D39032AC826190DC50856A9DD9C43A9B2B1E7EBDAA3794170EC97F3C149C9CE577BACAC06EBAF94A1F4E100E23EF0D490037345615BC52F51B2FF51A2098EBFF947879155C34693AD281EB65331D2BE7501D9CCC86BA284D23CC91B942E22DD8F2FF6D80B3445B028A21AEA9A7928CACA3FF47DD352B1DC298F89CAA5FB920003FDDA8C851B2B4AE1C089A6ADAF4E4A0AE73BACC0B774AF05CCCB9E7A6C78C17A2BA54E82A32A3AB43437953FCC90CA16E98F797BF2E735438
C19AA0468DA8AEF45315A566EF6B442FC77E298E2100876A8412B66DAD2C6A95CF887CD209CD27BD6B725167E0FE72475971250145511164D2D421ACD88CD95A7301884F68BBF481D56A5446151B233459EBB2CF3E611834B7F1593816027FF43BFF04EF32E227083348ADB94502BFCF85375EC26A8DAD060DA591375B3A3405966D06031A649C7AB05BF37D30921CCC385CFCAEFEF63C679EFF83B12CF42754C1ABCC6FCB017CD7AB3BDB2F49A625A07F27F48696E0696B97496F59199DDB5E0259B17FE1FD4BD21E5C4DC369F6994699408B33BDE10774EE9CC75D57805FCE4D1E3D8E48C04162465D540B1C08A141A8B5D5D1100547A80908327F569B390E923950D5A954F96EEF6CCA5E511C3F81F1138E9326C2366E33ECECF442A6ACCCAEFAEC8CD0E87F6CAFC22318DC3CD1ECEBA6CAD21895B6B7D5887F2129B080F259ECE905F68C61EC48057FFB1F5CC5E7290EFD770C4E8E81D01D6A2843608FDE091CC31528E1A87C8DC87F185B216FC67A8B6900E13CBA742113AE0566C3BE025A66D5DD7F2CEE70D697B12A309F70AA1BD26661B150F5EF24E80B4BD54675B962FB9D74E20420C5DEFEC859BCA2416DE1D1FFE05820BBD1E31FFD15649BFDE6D844A47785F4B36013D87A63148A359EFC257FA257ED031FDF91CA6721B363D0008D9D3D6832F9440E7477D1965D1CD57CCB1E42DEABD01D84B88FB26DD53652318163EEA29C2CAD20AD0BC782910A83197C2AB4B289226CCABBD60B8AE132D21D4DA0E3B0A8154289AA77AFAB27E620806E387366DC38661D186530AB4990C8FE9E3D3A26DB271C45EF9A3A4C8AFAD2090C6531F7159A053F23C1E3F4A39A6D80BEA8C48807073D70B6A19FB564BE8CAFE21ACE35C8754797D0976FE9884BEA9699C2C0332925F7090FBE3A4F28679898785B9A433F71432B52002F68A01975D4B16B5C2E6DA252B81D619E270A7000B5BE4258FF24D9082B9499704B7AF01D15B31B3C89AF6498FE60CB593CC6BBE6600D05DA7797066BBE835FA3197DD5D76EF5A80A843046CED706D77C376852923ACE9FE830B280F2C307AAE50DCC5D6CAE3D22096B8934B2023965D77ABEAD8E6F2D2FCA0670EB9866C6834E5239EE4CEC824CA8C00E956B501EDA43FB06757E1628C9BA18604C07EFC1C7F0E0C4F1CAACED765F2417B629AC07B127BD081111D195A0477E974442025A8FEB2CE0311569EE2FE4EC07472B0E2D185E7AF3C9C799C4D6681AF0DDDAE0C24EC79E9325DE7A7F35DD1B193EA80F5B6453C8DBC985224BA1EE8084E2AD6DBD1DF0D043F5C84C50017C18661CA6022A700B6E8AA09D59753953700BD0757139B2C7EF7C2BD2DF781E7CF970E4BA1119DC95FE6DFD19B46B1810F41BC9B5B94D886DB254EA7DB06E09834A98E2CE16386B24B76042A07D43C06E11341DEB4F0E4AE1CF17456D
949AECC1AB660A8DA21A1D8826AD06127BF1E03CAC1EEFB1D859C96DD271DB89C454CD422B696F1BAF68FD4024FD21ADEA4B489BEB956A4FDB40833B8254FAF97C8896F97FFFA345398501C818E7464052E04D6AE1686CBA3DE18EEEEA0C704F57648082CBBAED9F51B0F457A708B74677504DA7257E1404E9EDB47BFF107D3A85747662FC6830CCF5F77AD0C6FF27DEA4EE8267DF0A061649B8A6B140E743D56EA83241A372D79C71D47F48D09EF5E43B8F94D799C4E357E747C495064ED73EEE62C5A1ABD3856F0C62F9FDD3476A954D3E99D78ECAF1C974DADCBBF996681E7570963AF02FE22B55D3DF1460BEC9E33854D54C6475B0600C7F405E22732E45448423ED976118D929065A5E90DE6495F2389859F2B5211FFBDE1AA3DF605FAAEFA0AD9C566D71109B24E19693370539C6CA7CA17C2D4A6B8DAF45FD202494EDB74DCF264360AD51A79ADC0D6E61E220F3A1F7B20DCF9B24DAE9C706F376B0F356EBE887D96CDA4F44DBCE59D4608205DFEEF02384912B8BC4297565D9592EEC0F040D1850C6A56E3BA3C1505863C110468F4ADC0B6B032B5CB1C303CF55AF0BD4E398542A0C7F5D0207B561B96353BA3D57B31F35EBD7AC59988B0C10D939B9754B2179FADD28FBBA7F8F41A3030ED2BFD8C9CA79861E58E3F33030F83C65E5E687695413108BB756D30F790504A58751445F1A1E87BEED9EE2C8BA6F4BF2944BD5F5A5CEF70B38EC726070F5AD81A296BC0B030EDC143D84E51DE8BE27F3A9C4DCB590915FFEDFFCD3CFF28A048DE2C14D48392D40081B89C5B607847E49242C8D1687399A39BFE12BD6E3CE6D2A2C1ABF91261A618BE6FF5B6BC11F4D09059F5E3FCBB465CF4C10C135BC27CDB6AC78FDDB29BDB703632DB8786FE6C37722A53A3DFEED151BAC3127AF26967782C2239862320B6AD55A3E700C1AA7B93FB81AE0355C68DB47FA8B8ECE44616E7F8EBD8233636F1A84E83922392D7A9ED60168CC2EE9D7DCA1357FD16B16D3E64365DB1618DE11E393F05CA35EDAEECA028290CC479AB7D72781644C9171BAC19E412DAFE7B6DD10BA70D3F4305264FAE81A115D08A4D92D30F12553F2D5F79101C05B1E420FFBCD0D2CE14FD076944A2EC3095649065980C02898F5D0E6AB147FB21315B2F55266209EFF6A575E13CEAAF86104FA4BFA38A35E9F1E5104B14824E0F3C328D64415EFA32808A03636C954937A2429277A81596DAA7349ABF5D498D9A81AEA97E3AA0683CFBEF7D743D23165A6C7375C61DF53EE0DD8C164FC907E5715B6EF8D0B3BCAAEEEC70A8C3ACD227F59F5C245EF4C504B9555DAFBF4F8A53F5A953CB4C62A17950BFE9A3A74A1C5D869E144A15D7FEB8D39EDD1190AF018AAA72EC88E86CE63B5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/QURJOW+FiraCode-Regular cguidfix
/F1.1/QURJOW+FiraCode-Regular renmfont
%RBIBeginFontSubset: UHBSIN+FiraCode-Bold
%!FontType1-1.0: UHBSIN+FiraCode-Bold 1.0000.1.2040
14 dict begin/FontName /UHBSIN+FiraCode-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /f put
dup 34 /X put
dup 35 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1801 1 index div -500 2 index div 1192 3 index div 1050 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/X 1 def
/f 2 def
/y 3 def
/uniE003 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1801 -500 1192 1050}def
/UniqueID 4480399 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893F29BB4D157E7F1A37F7A4689D39EB5610811CB23FF33D5981260BF85AC6AE8BD513D19FA19AEAE4DA86F85C906A325706844C2DFABCCAC2BE8A10987232EC11D7C3867144BD9D0073CCF4A45B55FF5A39519C15970DD0EF2A814B1AE316161B6E659006496F7A7FB394EA90DF753301C82031E9AA7AD3BA8F6C1946E127F02FA675C52CF857C5EB98703E6000CA48038079527BE1F17694BF5B771316E6BEEFA7F3FEEE7608F34DDF73D02F1C7C4B18F16A816FB2513F3738D879969C6476EF596208B552E1CFAA5C673802427F3034832A7B856ADAC7A52127B2AA23422DB8DB394BA835F2FD787E5B073409C12822AA59B1FB75881EEE58FB3C6306B9907D12A67147BF62ECDD702BC17EF4A89276CC1B28CDE1598F46BCF0AC8960C2CB6174CA540711AC98392E0CD9869EE3729F826984FEF6C843CA7410BFE59B98DD0BAEF4575403917255D939CBCB6DEC2DFAE6D7A3CD675E4273E7938B82B5FDDE86AAF94E9A0D7F52CFFA6E740C0509E23C9AECE748CDC39F25EE9DBBDE720D41B8A906A460D25D9042FE118A719A22839FEDAD934B1D7D538840F30469375C5DC403B8ABD128493008896FFAB325BB0F491A90C1A9346CE5EA553056A8F4FD58F4FA7AA1A5702DD0E59464B785E70689CAE9BF31FC9440FA4D7B0E3E788329E2E4F0D7E3237BB0BB9B8811F66F16692951CB7158F3F093B13B44B1273CCD6A5555C903B8ED0801
D65AC746E356D84747341F2CE17D8B224D4D02CBD5A7B2D0702EC0FF4BFE6195E344AF97D84D86DFEDDD36E89C6A9A8EFD55475AFBEE95BE1FA741ACDC0AEE0637D164C14ACF72BDBE02B4BD9D075C341BD938915195A15A02B739292B16B11AA518FBC4F00FD30243EB8E3236DBE36FA9740A035F1768CF2F9A938A5986AE492278CD8418A87639A118B03837C06EEB4A4E28C2C46539A68545C6204723E98ABAC1248DE5BEB479AD335782AFFA52FBDB96D79FF2ADCB6B941389563487BA88F57450D426CE77749450614FF1DD83D3E1E14AC4644EF1DEB43A490543A5E8B1200BA40B729A042077058729CF7336002266FDF41F11EB724A976A41513B5FAE58BA81D91BA7CE57D7E6F216E174E395B2F7901E04621F031E5D5FF9BE4C6A0A3141D1F079F3077994481B1621C1568B357A541841E2B4663748830B55CC73EDE7C4B785657E1471A5F0E3A42E50E2C9ADB2FD64EC0B5692725F3840A085A7742FFFF9F45DB25B33E42DD5BD62E345932018FE62D0274F33668A461DC9B5F801DD05708F440D79EEC6BF9D6BF06FF4E74DE0FADC91B55D9D2CCDEEF8F04C692A792E2DE9F8CADFC1E93B754808451F47F28C689F0D45300F101227C512CBAD9DCBCED217440907EA389213DE88AC924CCF2477C5CD1C3D005CC31F5E6E86B8484AC1B5A3DA617FAF717787078CFA7F6A3E6570EB628C0ACFA5E57ABA6FCF20D99E14B2DC90D327AAC27B76BC37510F68590AA93BDFB9A2EDBAC93143E05A632D2287205C009E59AA2424438FA8331AEAC996B1F9504196F39E175554D1219B17FF32CFF49D07F45D7B3A31D9081F6CE7FBB6AC53D9772793EE2E81EF1C5366D787C4F7C490548CC74218D1C099F1733035C53FF8F8CBB24079F187449A5AD6933D5D9D9A8B5BC677D7D979B89FECBD83937057B9DB7D7AE6B0F23D2B51303EC34DB408A2A602BF228147730FAEEF7FD3D4BEB0C7ADF0D98AC48009F76E8E81E0637A7863C108A0F2C6FFA8A59CD34C798546CEF47A7E8ABA90CF32A7057422E15C114CD6F3C937605979B97595CDBA7CF3A973783197E3812614E0F44C77DC7ED0855FCC38182B302C1F3888276420B3DEA08E4B5722F6C87F9FE0D1171D6F9C825C7AE6A050F6402D0179F7B66DB9C87288C731158BBA929A92CD78AE395A884A8722BD30B1AF828CD54665002A44FEE9B671B3D37C0BC253375586E8EE502DEEAA8E6B037EA318AE47B058061CC8E1CE0F41E2AB9E31580672C3047449BA6A55702BEA714F4719045E3A0BD71D45450AB3A021BF367888EC6CC246995D071D3B595E8BE0A420F339874F4F4D2B610AD36064D0FCFAAD19ED95BEA5B5B1630C9BFC0E5DB358E8052C987EC73B087C88287F1345B639BF8F001B04A9BE074836748824E64C3E78AFF2C4D308EED4B48D051E9EE37958FC7EBBB171AB84796214
12BFBCCD656F92EC90FC7A9CB20EEAF729457B623DC6A1D930F49D2373386EFF8E42009E8D669EF35C4ECF32C50DED8FC3CA9672208900A7B138109336F1391118ECA20D175167D8F9FEE3D8ACA3046CF6E2E0833E06C878D328A679422648E8753A6B5D2CCD35C4D8F13077D3DB4200780CD7642B9F3F48FE228A5C770B93C31C355EE9707617448BFA6F89DB9EEFCE931CB651477314D4CADC747A1F6E7034F97BA3604FC9E84B5AB1E29E866F73C4F8E053026E0614D2825B0CA344AB6EDDD9997EC4EE7D62E5D29A928012301724EEA7C72F3930136B28A996F0CC9E53D1AA920B530FFA3569297B2E3E5D4D94198274C674D2385BC98A1D19E1E62C79694870B04C56684B85998547C98C8837F855D3BDA7CFF5C24125F443CE3EF2AFD57A3AB05A08B9CD50EE711C857242E354A27F542AC1CA0B36831196E678DB660F031D2B413F9EEE794CABF8D20AAD1131CE81FC7318E15316B86225C6BDD54C9B16325D0DBF3BBBF59AFF43103E27130ED6AE2F71EE16B4EFBDB7F2DF64CD224B28CA13D7A6443556B49E4A49DCFF1CFEF3982C9D59E65B3FBECE5EB9C18DCA6CCC18AC3C995413C15F4C468F3735B4345F822D33D1369880026185AB8910257E5645430CCF2397F05C9ADB931EE765BEFED2489758B01866BF6ACA1F24AD87E99E75CE66CC0C35EB04BA1E1370A62580ECA4627CD3DE6F900C79A900DE22ED1D6AE8300206AAFD55DC9C440F1AF94A80462721A65D1EDD8A14DF7E97455AAF880171CA374809759665406EAD9B9E28D4CE5C7B45E9CDB2D8FBAB65DA53FAA270243157203B966F9B1A531476049891D1998D4478DB445BC11EC8B069C0ABC68442152823F610EE7CFAE04FDF94E311588E99481E74DAD1B42ADC96085A80B3957235185F8BE230EC69271C334779E03CDEB0C11ECB3E1D279D4E5147ED46D6E1BA95FE1FEABC17BEA9ED19C17D3666420ED19A5955F52DCF03F35CB9CAC181E5B2FE10ADB56EA81B194FFDE58D4BD0DF340ED38E0C5ABDD591DF7A7C96DF31FC7779768C164CA16B261263216C3CB6687F5B8549C97992FB3E22D8F9796DC46A8B44E888AA1604566B147B250790719C8BC8CF3713701F0AE93D9246297C95795C423EF0AF2022DDF76EA1B933367C8DB7B788DDD318FEF1B6CAB7F81F0829C88BF684A2CD4A851D49CD1FFD2842BF2086577707181EF1FC5171BF9441C28221D4316222118DCA996C6592E549E559B5D310BE29E8F0D3253AF3CB2FC28BCBB2B27B9C65AB08B328C93399B0EA57DD897E358BC8709DD2488F0837404DA92E0389187F71263DFC88474D3D69A0B2D2F368227684FCB92E07A29080FDC6AD91CDA91A839F63818731ACEDE139336A027170720914D012D597A4278C645F876AFFD7BA55558C4D8DA51D1A844417
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/UHBSIN+FiraCode-Bold cguidfix
/F2.1/UHBSIN+FiraCode-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.847 0.847 0.847 sc
q
363 134 m
432.03558 134 488 189.9644 488 259 c
488 328.03558 432.03558 384 363 384 c
293.96442 384 238 328.03558 238 259 c
238 189.9644 293.96442 134 363 134 c
h
W*
0 0 715 514 rc
233 389 m
493 389 l
493 129 l
233 129 l
h
f
Q
0.13725491 0.21568628 0.22745098 sc
q
433.95688 322.3934 m
299.6066 188.04311 l
299.6066 188.04311 l
297.65399 186.09048 294.48816 186.09048 292.53552 188.04311 c
292.53552 188.04311 l
292.53552 188.04311 l
290.58292 189.99573 290.58292 193.16156 292.53552 195.11418 c
426.88583 329.46448 l
426.88583 329.46448 l
428.83844 331.41708 432.00427 331.41708 433.95688 329.46448 c
433.95688 329.46448 l
433.95688 329.46448 l
435.90952 327.51184 435.90952 324.34601 433.95688 322.3934 c
h
W*
0 0 715 514 rc
444.56351 325.92892 m
296.07108 177.43651 l
281.92892 191.57864 l
430.42136 340.07108 l
h
f
Q
/Cs2 SC
0.13725491 0.21568628 0.22745098 sc
q
242 0 249 160 rc
1 0 0 -1 242 160 cm
/F1.1[ 100 0 0 -100 0 0]sf
34.5 114 m
(!"#)[ 60.000000 60.000000 0.000000 ] xS
Q
q
0 367 715 147 rc
1 0 0 -1 -4 514 cm
/F2.1[ 100 0 0 -100 0 0]sf
329.5 108 m
(!)s
Q
q
49 167 60 200 rc
1 0 0 -1 49 367 cm
/F2.1[ 100 0 0 -100 0 0]sf
0 135 m
(")s
Q
q
618 167 97 200 rc
1 0 0 -1 618 367 cm
/F2.1[ 100 0 0 -100 0 0]sf
0 135 m
(#)s
Q
/Cs1 SC
0.13725491 0.21568628 0.22745098 sc
q
567.07104 285 m
588.2843 263.7868 l
581.2132 256.71573 l
560 277.92892 l
567.07104 285 l
h
W*
0 0 715 514 rc
567.07104 292.07108 m
595.35535 263.7868 l
581.2132 249.64465 l
552.92896 277.92892 l
h
f
Q
q
588.2843 253.92892 m
567.07104 232.71573 l
560 239.78679 l
581.2132 261 l
588.2843 253.92892 l
h
W*
0 0 715 514 rc
595.35535 253.92892 m
567.07104 225.64465 l
552.92896 239.78679 l
581.2132 268.07108 l
h
f
Q
q
488 264 m
588 264 l
588 254 l
488 254 l
488 264 l
h
W*
0 0 715 514 rc
483 269 m
593 269 l
593 249 l
483 249 l
h
f
Q
1 1 1 sc
q
588 266 m
589 266 l
589 251 l
588 251 l
588 266 l
h
W*
0 0 715 514 rc
583 271 m
594 271 l
594 246 l
583 246 l
h
f
Q
0.13725491 0.21568628 0.22745098 sc
q
217.07108 285 m
238.28427 263.7868 l
231.21321 256.71573 l
210 277.92892 l
217.07108 285 l
h
W*
0 0 715 514 rc
217.07108 292.07108 m
245.35535 263.7868 l
231.21321 249.64465 l
202.92892 277.92892 l
h
f
Q
q
238.28427 253.92892 m
217.07108 232.71573 l
210 239.78679 l
231.21321 261 l
238.28427 253.92892 l
h
W*
0 0 715 514 rc
245.35535 253.92892 m
217.07108 225.64465 l
202.92892 239.78679 l
231.21321 268.07108 l
h
f
Q
q
138 264 m
238 264 l
238 254 l
138 254 l
138 264 l
h
W*
0 0 715 514 rc
133 269 m
243 269 l
243 249 l
133 249 l
h
f
Q
1 1 1 sc
q
238 266 m
239 266 l
239 251 l
238 251 l
238 266 l
h
W*
0 0 715 514 rc
233 271 m
244 271 l
244 246 l
233 246 l
h
f
ep
end
